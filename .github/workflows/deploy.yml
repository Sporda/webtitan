name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Convert repository name to lowercase
        id: repo-name
        run: |
          echo "REPO_LC=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ env.REPO_LC }}:latest
          build-args: |
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            MONGODB_URI=${{ secrets.MONGODB_URI }}
            NEXT_PUBLIC_URL=https://webtitan.cz
            NEXT_PUBLIC_POSTHOG_KEY=${{ secrets.NEXT_PUBLIC_POSTHOG_KEY }}
            NEXT_PUBLIC_POSTHOG_HOST=${{ secrets.NEXT_PUBLIC_POSTHOG_HOST }}
            RESEND_API_KEY=${{ secrets.RESEND_API_KEY }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXT_PUBLIC_POSTHOG_KEY: ${{ secrets.NEXT_PUBLIC_POSTHOG_KEY }}
          NEXT_PUBLIC_POSTHOG_HOST: ${{ secrets.NEXT_PUBLIC_POSTHOG_HOST }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          envs: DATABASE_URL,NEXT_PUBLIC_POSTHOG_KEY,NEXT_PUBLIC_POSTHOG_HOST,REPO_LC,MONGODB_URI,RESEND_API_KEY,JWT_SECRET
          script: |
            # Přihlášení do GitHub Container Registry
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            # Zastavení a odstranění starého kontejneru
            docker stop webtitan || true
            docker rm webtitan || true

            # Odstranění starého image
            docker image rm ghcr.io/${{ env.REPO_LC }}:latest || true

            # Stažení nového image
            docker pull ghcr.io/${{ env.REPO_LC }}:latest

            # Vytvoření .env souboru
            cat > /var/www/webtitan.cz/.env << EOL
            DATABASE_URL=${DATABASE_URL}
            MONGODB_URI=${MONGODB_URI}
            NEXT_PUBLIC_URL=https://webtitan.cz
            NEXT_PUBLIC_POSTHOG_KEY=${NEXT_PUBLIC_POSTHOG_KEY}
            NEXT_PUBLIC_POSTHOG_HOST=${NEXT_PUBLIC_POSTHOG_HOST}
            RESEND_API_KEY=${RESEND_API_KEY}
            JWT_SECRET=${JWT_SECRET}
            EOL

            # Spuštění nového kontejneru
            docker run -d \
              --name webtitan \
              --restart always \
              -p 3000:3000 \
              --env-file /var/www/webtitan.cz/.env \
              ghcr.io/${{ env.REPO_LC }}:latest
