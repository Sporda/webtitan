name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install Dependencies
        run: pnpm install

      - name: Build
        env:
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
          AUTH_DISCORD_ID: ${{ secrets.AUTH_DISCORD_ID }}
          AUTH_DISCORD_SECRET: ${{ secrets.AUTH_DISCORD_SECRET }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: pnpm build

      - name: Copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          source: ".next,package.json,pnpm-lock.yaml"
          target: "/var/www/webtitan.cz"
          strip_components: 0

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        env:
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
          AUTH_DISCORD_ID: ${{ secrets.AUTH_DISCORD_ID }}
          AUTH_DISCORD_SECRET: ${{ secrets.AUTH_DISCORD_SECRET }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          envs: AUTH_SECRET,AUTH_DISCORD_ID,AUTH_DISCORD_SECRET,DATABASE_URL
          script: |
            cd /var/www/webtitan.cz

            # Nastavení proměnných prostředí
            echo "AUTH_SECRET=$AUTH_SECRET" > .env
            echo "AUTH_DISCORD_ID=$AUTH_DISCORD_ID" >> .env
            echo "AUTH_DISCORD_SECRET=$AUTH_DISCORD_SECRET" >> .env
            echo "DATABASE_URL=$DATABASE_URL" >> .env
            echo "PORT=3000" >> .env
            echo "NEXT_PUBLIC_PORT=3000" >> .env

            # Instalace pouze produkčních závislostí
            pnpm install --prod --frozen-lockfile

            # Správa PM2 procesu
            if pm2 describe webtitan > /dev/null; then
              # Pokud proces existuje, restartujeme ho
              pm2 restart webtitan --update-env
            else
              # Pokud proces neexistuje, vytvoříme ho
              pm2 start npm --name "webtitan" -- start -- -p 3000
            fi

            # Uložení PM2 konfigurace
            pm2 save

            # Nastavení automatického startu PM2 po rebootu
            # Generuje a nastaví startup skript pro aktuální OS
            pm2 startup

            # Uložení aktuální konfigurace pro startup
            pm2 save
